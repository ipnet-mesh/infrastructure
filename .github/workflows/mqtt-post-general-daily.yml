name: "MQTT Post: Daily"

on:
  schedule:
    - cron: '0 9 * * *'  # Runs daily at 9:00 AM UTC
  workflow_dispatch:
jobs:
  MQTTPublish:
    runs-on: ubuntu-latest

    steps:
    - name: Cache Apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-mosquitto-${{ hashFiles('/etc/apt/sources.list') }}
        restore-keys: |
          ${{ runner.os }}-apt-mosquitto-
          ${{ runner.os }}-apt-

    - name: Install mosquitto clients
      run: |
        sudo apt-get update
        sudo apt-get install -y mosquitto-clients

    - name: Publish MQTT message
      env:
        MQTT_HOST: ${{ vars.MQTT_HOST }}
        MQTT_PORT: ${{ vars.MQTT_PORT }}
        MQTT_TOPIC_PREFIX: ${{ vars.MQTT_TOPIC_PREFIX }}
        MQTT_USERNAME: ${{ secrets.MQTT_USERNAME }}
        MQTT_PASSWORD: ${{ secrets.MQTT_PASSWORD }}
        MESHCORE_CHANNEL_IDX: ${{ vars.MESHCORE_CHANNEL_IDX }}
        MESSAGE_PREFIX: ${{ vars.MESSAGE_PREFIX }}
      run: |
        # Set default values for scheduled runs
        TOPIC_SUFFIX="command/send_chan_msg"
        MESSAGE="{\"channel\": ${MESHCORE_CHANNEL_IDX}, \"message\": \"${MESSAGE_PREFIX}: Daily MQTT Publish Test\"}"

        # Construct full topic
        FULL_TOPIC="${MQTT_TOPIC_PREFIX}/${TOPIC_SUFFIX}"

        echo "Publishing to topic: $FULL_TOPIC"
        echo "Message: $MESSAGE"

        # Publish message using mosquitto_pub
        mosquitto_pub \
          -h "${MQTT_HOST}" \
          -p "${MQTT_PORT}" \
          -u "${MQTT_USERNAME}" \
          -P "${MQTT_PASSWORD}" \
          -t "${FULL_TOPIC}" \
          -m "${MESSAGE}"

        echo "Message published successfully"
